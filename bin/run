#!/usr/local/bin/node

var au = require('../lib/avconv-utils');



// parse arguments

var args = process.argv.slice();
args.shift(); // node
args.shift(); // script source
//console.log( args );

if (args.length === 0) {
  console.error('Syntax is:\n  bin/run <video> [scale] [fps] [strategy] [mosaic]');
  process.exit(1);
}
var video    =                              args[0];
var scale    = args.length > 1 ? parseFloat(args[1]) : 0.25;
var fps      = args.length > 2 ? parseFloat(args[2]) : 1;
var strategy = args.length > 3 ?            args[3]  : 'horizontal';
var mosaic   = args.length > 4 ?            args[4]  : undefined;



var videoParts = video.split('/');
var videoFile = videoParts.pop();
var videoFile0   = videoFile.split('.')[0];
var videoFileExt = videoFile.split('.')[1];
var hash = videoFile.split('.')[0];
var videoPath = videoParts.join('/');

if (!mosaic) { mosaic = videoFile0; }



console.log([
  'arguments:\n',
  '  video:    ', video,    '\n',
  '  scale:    ', scale,    '\n',
  '  fps:      ', fps,      '\n',
  '  strategy: ', strategy, '\n',
  '  mosaic:   ', mosaic,   '\n'
].join(''));



// run utilities

au.getMetadata(video, function(err, md) {
  if (err) {
    console.error('problem in getMetadata: ' + err);
    process.exit(2);
  }

  //console.log('step 0 res:\n', md);

  au.extractFrames({
    inFile:          video,
    videoDimensions: md.dimensions,
    fps:             fps,
    scale:           scale
  }, function(err, info) {
    if (err) {
      console.error('problem in extractFrames: ' + err);
      process.exit(2);
    }

    //console.log('step 1 res:\n', info);

    au.createImageMosaic({
      files:           info.files,
      frameDimensions: info.frameDimensions,
      strategy:        strategy,
      outFile:         mosaic + '.jpg',
      deleteFiles:     true
    }, function(err, info2) {
      if (err) {
        console.error('problem in createImageMosaic: ' + err);
        process.exit(3);
      }

      //console.log('step 2 res:\n', info2);

      console.log([
        'video duration: ' + md.durationSecs, '\n',
        'video dims:     ' + md.dimensions.join(' x '), '\n',
        'frame dims:     ' + info2.frameDimensions.join(' x '), '\n',
        '# frames:       ' + info2.n, '\n',
        'grid dims:      ' + info2.grid.join(' x '), '\n',
        'mosaic dims:    ' + info2.mosaicDimensions.join(' x '), '\n',
        'mosaic file:    ' + info2.outFile, '\n',
        '\n------------------\n'
      ].join(''));
    });
  });
});
