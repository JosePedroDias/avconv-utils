#!/usr/local/bin/node

var au = require('../lib/avconv-utils');



// parse arguments

var args = process.argv.slice();
args.shift(); // node
args.shift(); // script source
//console.log( args );

if (args.length === 0) {
  console.error('Syntax is:\n  samples/1 <hash> [scale] [fps] [mosaic]');
  process.exit(1);
}
var video  =                              args[0];
var scale  = args.length > 1 ? parseFloat(args[1]) : 0.25;
var fps    = args.length > 2 ? parseFloat(args[2]) : 1;
var mosaic = args.length > 3 ?            args[3]  : undefined;



var videoParts = video.split('/');
var videoFile = videoParts.pop();
var videoFile0   = videoFile.split('.')[0];
var videoFileExt = videoFile.split('.')[1];
var hash = videoFile.split('.')[0];
var videoPath = videoParts.join('/');

if (!mosaic) { mosaic = videoFile0; }



console.log([
  'arguments:\n',
  '  video:  ', video, '\n',
  '  scale:  ', scale, '\n',
  '  fps:    ', fps, '\n',
  '  mosaic: ', mosaic, '\n',
].join(''));



// run utilities

au.extractFrames({
  scale:  scale,
  fps:    fps,
  inFile: videoPath + '/' + videoFile
}, function(err, info) {
  if (err) {
    console.error('problem in extractFrames: ' + err);
    process.exit(2);
  }
  //console.log('step 1 res: ', info);

  au.createImageMosaic({
    files:      info.files,
    dimensions: info.dimensions,
    outFile:    mosaic + '.jpg'
  }, function(err, info2) {
    if (err) {
      console.error('problem in createImageMosaic: ' + err);
      process.exit(3);
    }
    //console.log('step 2 res:', info2);
    console.log('result: ' + mosaic + '.jpg\n\n------------------\n')
  });
});
